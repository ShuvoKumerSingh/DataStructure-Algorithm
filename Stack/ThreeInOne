'''
Describe how you could use a single python list to Implement three stacks
'''
class Stack:
    def __init__(self,stack_size):
        self.number_of_stack = 3
        self.items = [0]*(stack_size*self.number_of_stack)
        self.sizes = [0]*self.number_of_stack
        self.stack_size = stack_size

    def isEmpty(self,stack_num):
        if self.sizes[stack_num]==0:
            return True
        else:
            return False

    def isFull(self,stack_num):
        if self.sizes[stack_num]==self.stack_size:
            return True
        else:
            return False

    def top_of_stack(self,stack_num):
        offset = stack_num*self.stack_size
        return offset+self.sizes[stack_num]-1

    def push(self,stack_num,val):
        if self.isFull(stack_num):
            return "The Stack is Full"
        else:
            self.sizes[stack_num]+=1
            self.items[self.top_of_stack(stack_num)]=val

    def pop(self,stack_num):
        if self.isEmpty():
            return "The stack is empty"
        else:
            value = self.items[self.top_of_stack(stack_num)]
            self.items[self.top_of_stack(stack_num)]=0
            self.sizes[stack_num]-=1
            return value
    def peek(self,stack_num):
        if self.isEmpty():
            return "The stack is empty"
        else:
            value = self.items[self.top_of_stack(stack_num)]
            return value
